RDS Overview: 

Amazon Relational Database Service (Amazon RDS) makes it easy to set up, operate, and scale a relational database in the cloud. It provides cost-efficient and resizable capacity
while automating time-consuming administration tasks such as hardware provisioning, database setup, patching and backups. It frees you to focus on your applications so you can 
give them the fast performance, high availability, security and compatibility they need.

Amazon RDS is available on several database instance types - optimized for memory, performance or I/O - and provides you with six familiar database engines to choose from, 
including Amazon Aurora, PostgreSQL, MySQL, MariaDB, Oracle Database, and SQL Server. You can use the AWS Database Migration Service to easily migrate or replicate your 
existing databases to Amazon RDS.

AWS RDS Overview

DB Engine : 
a. Oracle
b. MySQL
c. Microsoft SQL Server
d. PostgreSQL
e. MariaDB
f. Amazon Aurora

Backup :
a. Auto
b. Manual
c. Cross-region Snap

Backups are automatically enablec in RDS.
& days retension(can be scaled upto 35 days).

Security :
a. VPC
b. IAM
c. SG
d. SSL
e. Encryption

HA & Load Sharing :
a. Multi AZ
b. Read Replica


RDS Read Replicas for Read Scalability:
    
                   ------------------------------------------------------------------------------------
                   |                             Application                                   |
              reads|                        writes|     |reads                                 |reads
                   |                              |     |                                      |
     RDS DB instance Read replica <--------------RDS DB Instance  <-------------------RDS DB instance read replicas
                                     ASYNC                         ASYNC Replidation
                                   Replication 
                                   
                                   
                                   
> Use up to 5 replicas.
> Within AZ, cross AZ or cross region.
> Replication is ASYNC, so reads are eventually consistents.
> Replicas can be pormoted to their own DB.
> Application must update the connection strings to leverge the read replicas.




RDS Read Replicas Use Cases:
      
                               
                                 Production                                 Reporting 
                                 Application                                Application
                                    |                                            |
                                    | reads                                      | reads
                                    |                                            |
                                    |                                            |
                                    M ------------------------------------------->R
                             RDS DB Instance         ASYNC Replication        RDS DB Instance read Replica
                             

> We have a production database that is taking a normal load.
> We want to run a reporting applicationto run some analytics.
> We need to create a read replica to run the new workload there.
> In this way the production application is unaffected.


Read Replicas are used for SELECT statement only, not for UPDATE, DELETE or INSERT, which changes the database.

                             

RDS Multi AZs - Disaster Recovery: 
    
    
                                     Application 
                                         |     |
                                   writes|     |reads
                                         |     |
                                         |     |
      
                            One DNS name - auto,atic failover
                                         
                 RDS DB <------------------  RDS Master Database 
                            sync replication
                            
                            
                            
> SYNC replication.
> One DNS name - autoatic failover to standby.
> Increase avalability.
> Failover in case of loss of AZ, loss of network, instance or storage failure.
> No manual intervantion in apps, it all automatic.
> Not used for scaling.
                            
                            
                            
Hands On Video Link: https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c02/learn/lecture/13528154?start=0#overview                          
                            
                            
Link for SQL Client:  https://sqlectron.github.io/                            
                            
 Steps to connect database to client:
    1. Click on add.
    2. Name of the databse.
    3. Databse Type.
    4. Server address.
    5. Connectivity & security -> Endpoint and port, copy the endpoint address.
    6. Give user name which you created and password.
    7. Test
    8. Save.
                            
      
