an IAM Introduction:
IAM (Identity & Access Management)

Whole AWS Security will be in IAM.
 1. Users
 2. Groups
 3. Roles

Root account should never be used (and shared).

IAM is the center of AWS.

            Users                                Group                               Roles
        It is only for users.              Contains users.          It is for machines.(Internal usage within AWS resources).
              |                                  |                                  |
              |                                  |                                  |
-------------------------------------------------------------------------------------------------           
|                         Poloicies (JSON Documents)                                             |
|                 Defines what each of the above can do and cannot.                              |
|                                                                                                |
|                                                                                                |                                                                                                
--------------------------------------------------------------------------------------------------



IAM has a global view.
Permissions are governed by Policies (JSON).
MFA (Multi Factor Authentication) can be setup.
IAM has predefined"managed policies".
It's always best to give the minimal permission to users to do their jobs(least privilage principles). 

IAM is a private account and credentials should not be shared at any cost.


AMI?
    As we show, AWS comes with base images such as:
        Ubuntu
        Fedora 
        Redhat
        Windows
        ect ....

    These images can be customised at runtime using EC2 user data.

    That's an AMI - an image to use to creat our instances.
    AMIs can be built for linux or windows machines.

EC2 AMIs Hands On:
    First of all we will install apache:
        yum update -y: to update all the packages.
        yum install httpd: apache server.
        systemctl start httpd
        systemctl enable httpd

         echo "Hello World" > /var/www/html/index.html
         curl localhost:80

Create an image of the esixting instance:
 

Cross Account AMI Copy.


IAM Definition:
AWS identity and access mnagement is aweb service that helps you securely control access to AWS resources. We should use IAM control who is authenticated(sign-in)
and authozised (has permission) to use resources.

Limitations of IAM:
IAM users limit is 5000 per aws account. We can add upto 10 users at a time. We are also limited to 3000 groups in AWS account.
We are limited to 1000 IAM roles under AWS account.
Default limits of managed policies attached to an IAM role and IAM user is 10.
IAM user can be member of 10 groups.
We can assign two access keys (max) to an IAM user.


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-----------------------------------------------------------------------------------------------------------------------------------------------------------
IAM Terms:
1> Principal.

2> Request.

3> Authentication.

4> Authorization.

5> Action/operation.

6> Resources


----------------------------------------------------------------------------------------------------------------------------
1 Principal: A principla is a person or application that can make a request for an action or operation on an AWS resources.

Our administrative IAM user is our first principal.

IAM users, roles and federated users and applications are all AWS principals.


2. Request: WHen a principal tries to use the AWS management console, the AWS API or the AWS CLI that principal sends a request to AWS. The request includes the 
following:
           Action, resources, principal, environment data, resources data.


3. Authentication: Validates the user to sing in.
To authenticate from the API to CLI, we must provide our access key and secret key.

4. Authorization: To authorize request, IAM user value from the request context to check for matching policies and determine wheteher to allow or deny the request.


We can create the IAM policy in the aws management console using one of the following ways:

1. JSON -> We can create our own jason syntax.

2. Visual Editor: We can construct a new policy from scratch in the visual editor. IF we use the VI Editor, we do not have to understand the JSON syntax.

3. Import: We can import a managed policy within our account and then edit the policy to customize it to our specific requirement.

  































































