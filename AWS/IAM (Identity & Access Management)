IAM Introduction:
IAM (Identity & Access Management)

Whole AWS Security will be in IAM.
 1. Users
 2. Groups
 3. Roles

Root account should never be used (and shared).

IAM is the center of AWS.

            Users                                Group                               Roles
        It is only for users.              Contains users.          It is for machines.(Internal usage within AWS resources).
              |                                  |                                  |
              |                                  |                                  |
-------------------------------------------------------------------------------------------------           
|                         Poloicies (JSON Documents)                                             |
|                 Defines what each of the above can do and cannot.                              |
|                                                                                                |
|                                                                                                |                                                                                                
--------------------------------------------------------------------------------------------------



IAM has a global view.
Permissions are governed by Policies (JSON).
MFA (Multi Factor Authentication) can be setup.
IAM has predefined"managed policies".
It's always best to give the minimal permission to users to do their jobs(least privilage principles). 

IAM is a private account and credentials should not be shared at any cost.


IAM Users:
---------
An IAM user is an entity that we create in AWS. It represents the person or service who uses an IAM user to interact with AWS.
We can create 5 users at a time, AM IAM user user can represent an actual person or an application that requests AWS access to perform actions on AWS resources.
THe newly created user has no credentilas we need to give themm after the user creation.
Each IAM user is associated with once and only one AWS account.


IAM Group:
---------
Group of users with same permissions under the same group.
Group can't be nested. Group is not truly an idenity in IAM because it cannot be idetified as a principal as a principal in a permission policy.
We have a limit of 300 groups in an AWS account.


XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
The following table lists the resources for which quota increases area can be automatically approved..

Adjustable quotas for IAM resources
Resource	Default quota	Maximum quota                       Default Quota                        Maximum Quota
Customer managed policies per account	                        1500	                                 5000
Groups per account	                                        300	                                 500
Instance profiles per account	                                1000	                                5000
Managed policies per role	                                 10	                                  20
Managed policies per user	                                 10	                                  20
Role trust policy length	                                2048 characters	                   4096 characters
Roles per account	                                         1000	                                5000
Server certificates per account	                              20	                                  1000
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx


IAM Role:
--------
A role in AWS is a set of permissions that grant access to actions and resources. Roles are similar to AWS users, but they are not associated with a specific person.

AMI?
    As we show, AWS comes with base images such as:
        Ubuntu
        Fedora 
        Redhat
        Windows
        ect ....

    These images can be customised at runtime using EC2 user data.

    That's an AMI - an image to use to creat our instances.
    AMIs can be built for linux or windows machines.

EC2 AMIs Hands On:
    First of all we will install apache:
        yum update -y: to update all the packages.
        yum install httpd: apache server.
        systemctl start httpd
        systemctl enable httpd

         echo "Hello World" > /var/www/html/index.html
         curl localhost:80

Create an image of the esixting instance:
 

Cross Account AMI Copy.


IAM Definition:
AWS identity and access mnagement is aweb service that helps you securely control access to AWS resources. We should use IAM control who is authenticated(sign-in)
and authozised (has permission) to use resources.

Limitations of IAM:
IAM users limit is 5000 per aws account. We can add upto 10 users at a time. We are also limited to 3000 groups in AWS account.
We are limited to 1000 IAM roles under AWS account.
Default limits of managed policies attached to an IAM role and IAM user is 10.
IAM user can be member of 10 groups.
We can assign two access keys (max) to an IAM user.


///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-----------------------------------------------------------------------------------------------------------------------------------------------------------
IAM Terms:
1> Principal.

2> Request.

3> Authentication.

4> Authorization.

5> Action/operation.

6> Resources


----------------------------------------------------------------------------------------------------------------------------
1 Principal: A principla is a person or application that can make a request for an action or operation on an AWS resources.

Our administrative IAM user is our first principal.

IAM users, roles and federated users and applications are all AWS principals.


2. Request: WHen a principal tries to use the AWS management console, the AWS API or the AWS CLI that principal sends a request to AWS. The request includes the 
following:
           Action, resources, principal, environment data, resources data.


3. Authentication: Validates the user to sing in.
To authenticate from the API to CLI, we must provide our access key and secret key.

4. Authorization: To authorize request, IAM user value from the request context to check for matching policies and determine wheteher to allow or deny the request.




  
Identity Federation:
If our users already have a way to be authenticated such as authentication through our corporate network. This is just logging internet identity provider as usch as 
with gmail or facebook ID rather than user name and password.































































